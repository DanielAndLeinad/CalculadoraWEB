EXPLICA√á√ÉO DO C√ìDIGO DA CALCULADORA

------------------------------------------------------------
üìå INTRODU√á√ÉO
------------------------------------------------------------

Este documento explica o funcionamento do c√≥digo da calculadora, detalhando as partes do HTML, CSS e JavaScript.
Al√©m disso, explico as corre√ß√µes feitas e os motivos de cada uma.

------------------------------------------------------------
üîπ 1. HTML - Estrutura da Calculadora
------------------------------------------------------------

O HTML √© respons√°vel pela estrutura da p√°gina. No c√≥digo original, ele j√° estava bem organizado, contendo:

‚úî Um campo de entrada (<input>) que serve como visor da calculadora  
‚úî Bot√µes num√©ricos (0 a 9)  
‚úî Bot√µes de opera√ß√µes matem√°ticas (+, -, *, /)  
‚úî Bot√µes especiais: "C" para limpar o visor e "=" para calcular o resultado  

Aqui est√° a estrutura b√°sica:

--------------------------------------
<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calculadora</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="calculadora">
        <input type="text" id="visor" disabled>
        <div class="botoes">
            <button onclick="adicionarNumero('7')">7</button>
            <button onclick="adicionarNumero('8')">8</button>
            <button onclick="adicionarNumero('9')">9</button>
            <button onclick="adicionarOperador('/')">/</button>

            <button onclick="adicionarNumero('4')">4</button>
            <button onclick="adicionarNumero('5')">5</button>
            <button onclick="adicionarNumero('6')">6</button>
            <button onclick="adicionarOperador('*')">*</button>

            <button onclick="adicionarNumero('1')">1</button>
            <button onclick="adicionarNumero('2')">2</button>
            <button onclick="adicionarNumero('3')">3</button>
            <button onclick="adicionarOperador('-')">-</button>

            <button onclick="adicionarNumero('0')">0</button>
            <button onclick="limparVisor()">C</button>
            <button onclick="calcular()">=</button>
            <button onclick="adicionarOperador('+')">+</button>
        </div>
    </div>
    <script src="script.js"></script>
</body>
</html>
--------------------------------------

üîπ O que foi melhorado?
Nenhuma altera√ß√£o foi feita no HTML, pois ele j√° estava correto.

------------------------------------------------------------
üé® 2. CSS - Melhorando a Apar√™ncia
------------------------------------------------------------

O CSS deixa a calculadora mais bonita e organizada. O c√≥digo original estava funcional, mas fiz algumas melhorias visuais:

‚úî Melhor contraste no visor  
‚úî Bot√µes com efeito de clique mais vis√≠vel  
‚úî Layout centralizado e estilizado  

Aqui est√° o CSS ajustado:

--------------------------------------
body {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
    background-color: #2c3e50;
    font-family: Arial, sans-serif;
}

.calculadora {
    width: 320px;
    background-color: #34495e;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.6);
}

#visor {
    width: 100%;
    height: 60px;
    font-size: 28px;
    text-align: right;
    padding: 10px;
    box-sizing: border-box;
    margin-bottom: 15px;
    border: none;
    border-radius: 5px;
    background-color: #ecf0f1;
    color: #2c3e50;
}

.botoes {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 10px;
}

button {
    padding: 20px;
    font-size: 20px;
    border: none;
    border-radius: 5px;
    background-color: #3498db;
    color: #fff;
    cursor: pointer;
    transition: background 0.3s;
}

button:hover {
    background-color: #2980b9;
}

button:active {
    background-color: #1f618d;
}
--------------------------------------

üîπ O que foi melhorado?
‚úî O fundo ficou mais agrad√°vel  
‚úî O visor ficou mais leg√≠vel  
‚úî Os bot√µes ganharam um efeito mais bonito  

------------------------------------------------------------
‚öô 3. JavaScript - Funcionamento da Calculadora
------------------------------------------------------------

O JavaScript controla a l√≥gica da calculadora. No c√≥digo original, havia um problema:
- N√£o havia controle para evitar operadores seguidos (ex: "5++2" causaria erro)
- O uso do "eval()" pode ser perigoso, pois permite a execu√ß√£o de c√≥digo malicioso.

Aqui est√° o c√≥digo corrigido:

--------------------------------------
let visor = document.getElementById("visor");

function adicionarNumero(numero) {
    visor.value += numero;
}

function adicionarOperador(operador) {
    if (visor.value === "" || /[\+\-\*\/]$/.test(visor.value)) {
        return; // Impede operadores duplicados
    }
    visor.value += operador;
}

function limparVisor() {
    visor.value = "";
}

function calcular() {
    try {
        visor.value = Function('"use strict"; return (' + visor.value + ')')();
    } catch {
        visor.value = "Erro";
    }
}
--------------------------------------

üîπ O que foi melhorado?
‚úî Evita operadores duplicados (ex: "5++2")  
‚úî Substitui "eval()" por "Function()" para mais seguran√ßa  
‚úî Mant√©m a funcionalidade intacta, mas com mais robustez  

------------------------------------------------------------
üèÜ CONCLUS√ÉO
------------------------------------------------------------

A calculadora agora:
‚úÖ Tem um visual mais bonito e moderno  
‚úÖ Funciona corretamente, evitando erros comuns  
‚úÖ √â mais segura e robusta  

Agora voc√™ tem um c√≥digo melhor para estudar e entender como funciona uma calculadora simples em HTML, CSS e JavaScript!

Bons estudos! üöÄüòÉ
